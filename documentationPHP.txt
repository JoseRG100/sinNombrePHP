=================
----- NOTAS -----
=================
- La lógica del modelo, como mucho, contiene a los CRUD

================
--- PHP CORE ---
================
- echo 'String'         //Printa un mensaje de texto en el navegador.
- var_dump('variable'); //Printa los valores de una variable.


=================
----- TO DO -----
=================
- GESTIONAR CURSOS: Pasar formulario agregar curso a MODEL. (OPCIONAL- `JOSE`)                          `Jose`
                    Eliminar botón Enviar.
                    Cambiar nombre a gestionar Asignaturas.
                    ¿Cambiar activo por TinyInt?
                    Cambiar descripción: FORM TEXT -> TEXT AREA.
- Agregar el modelo SCHEDULE a nuestro producto. -> Agregar clase.                              `Jose y Julio`
- Des-suscribirte de una clase                                                                         `Julio`
- MEJORAR: Vista para perfil de usuario.                                                               `Julio`

------------------------------------------------------------------------------------------------------------
VISTAS - OBLIGATORIO
------------------------------------------------------------------------------------------------------------
- TODO: TERMINAR FUNCIÓN SHOW-ACTIVE-SESSION.                                           `Julio`
- CREAR: Vistas para calendario -> MENSUAL, SEMANAL, DIARIO.
- MEJORAR: Vista para perfil de usuario.
           al modificar, peta el desencriptado de la password.
- GESTIONAR CLASE:  Hay que modificar tode el formulario, para que llame a los modelos  `Julio`


--------
OPCIONAL
--------
- GESTIONAR CURSOS: Pasar formulario agregar curso a MODEL. (OPCIONAL- `JOSE`)
                    Eliminar botón Enviar.
                    Cambiar nombre a gestionar Asignaturas.
                    ¿Cambiar activo por TinyInt?
                    Cambiar descripción: FORM TEXT -> TEXT AREA.
- MODIFICAR: Toda la mascara / logo / etc, del producto nuestro (OPCIONAL)
             (Que tenga identidad propia)

------------------------------------------------------------------------------------------------------------
MODELOS-OBLIGATORIO
------------------------------------------------------------------------------------------------------------
- Hay que crear CAMPOS DE TIPO único: EMAIL, NIF, USERNAME (NOMBRE Y APELLIDO).
- Agregar 6 nuevos registros con cursos, 4 nuevos registros con profesores, y 3 nuevos registros con clases.

--------
OPCIONAL
--------
- Crear un nueva entidad de tipo USER. (Hacerla padre de admin, teacher y student).


------------------------------------------------------------------------------------------------------------
CONTROLADORES:
------------------------------------------------------------------------------------------------------------
- Agregar el modelo SCHEDULE a nuestro producto. -> Agregar clase.                              `Jose y Julio`
- Que cada Student tenga su propio inicio de sessión (Cada uno se matricule en sus propias asignaturas) `Julio`
- Des-suscribirte de una clase                                                                          `Julio`

- Refactorizar 'header:// de todos los controladores'.                                          `Julio`


















------------------
OTROS:
------------------
- ¿Modularizar las alertas en el fichero UTILS?
- IMPORTANTE: Comunicar al consultor la desición de esperar a laravel para crear todas las validaciones.    [FALTA]
- Faltan: Todas las validaciones de formulario LOGIN               `JULIO`          [ESPERAR AL PRODUCTO 3: LARAVEL]
- Faltan: Todas las validaciones de formulario STUDENT REGISTER    `JULIO`          [ESPERAR AL PRODUCTO 3: LARAVEL]
- Faltan: Todas las validaciones de formulario TEACHER REGISTER    `JULIO`          [ESPERAR AL PRODUCTO 3: LARAVEL]
- Faltan: Todas las validaciones de formulario TEACHER UPDATE      `JULIO`          [ESPERAR AL PRODUCTO 3: LARAVEL]
          (mirar de incluir todos los manejadores de excepciones en errorController o utils).
